
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастройкиФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект["СтрокаПодключения"]) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Спринт) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийСпринт = Спринты.НайтиСтроки(Новый Структура("id", Спринт))[0];
	
	СтадииСпринта = БИТС_СкрамСервер.Стадии(СтрокаПодключения, Спринт);
	ЗадачиСпринта = БИТС_ЗадачиСервер.Получить(СтрокаПодключения, ТекущийСпринт["groupId"], Спринт);
	СозданиеЭлементовФормы(СтадииСпринта);
	ЗаполнитьТаблицы(СтадииСпринта, ЗадачиСпринта);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект["СтрокаПодключения"]) Тогда
		ПодключитьОбработчикОжидания("ОткрытьФормуНастроек", 0.5, Истина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

#Область КомандыОбщие

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВремяЗаСпринт(Команда)
	
	СтадииСпринта = БИТС_СкрамСервер.Стадии(СтрокаПодключения, Спринт);
	ВремяЗаСпринт = ВремяЗаСпринтНаСервере();
	Для Каждого Стадия Из СтадииСпринта Цикл
		ИмяЭлемента = "Задачи" + Стадия.Значение["Наименование"];
		Для Каждого Строка Из ЭтаФорма[ИмяЭлемента] Цикл
			
			ЗатратыЗадачи = ВремяЗаСпринт[Строка["id"]];
			Если ЗатратыЗадачи = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Строка["timeSpentInLogs"] = Строка(ЗатратыЗадачи["Всего"]);
			Строка["ВремяЗаСпринт"] = Строка(ЗатратыЗадачи["ЗаСпринт"]); 
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьРезультаты(Команда)
	
	СтадииСпринта = БИТС_СкрамСервер.Стадии(СтрокаПодключения, Спринт);
	РезультатыЗадач = ПолучитьРезультатыНаСервере();
	Для Каждого Стадия Из СтадииСпринта Цикл
		ИмяЭлемента = "Задачи" + Стадия.Значение["Наименование"];
		Для Каждого Строка Из ЭтаФорма[ИмяЭлемента] Цикл
			
			РезультатыЗадачи = РезультатыЗадач[Строка["id"]];
			Если РезультатыЗадачи = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			// TODO: Добавить результаты
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Дайджест(Команда)
	Дайджест = ДайджестНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)                                 
	ОткрытьФормуНастроек();
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеНастроек(Результат, ДополнительныеПараметры) Экспорт
	
	КонстантаПодключения = ЗначениеКонстанты("БИТС_СтрокаПодключения");
	Если СтрокаПодключения = КонстантаПодключения Тогда
		Возврат;
	Иначе
		СтрокаПодключения = КонстантаПодключения;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КомандыТаблиц

&НаКлиенте
Процедура ВидимостьСтадии(Команда) 
	
	ИнвертироватьСостояниеКнопки(ЭтаФорма.ТекущийЭлемент);
	ИмяГруппы = СтрЗаменить(ЭтаФорма.ТекущийЭлемент.Имя, "ВидимостьСтадии", "ГруппаСтадия");
	Элементы[ИмяГруппы].Видимость = НЕ Элементы[ИмяГруппы].Видимость; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	
	ИмяТаблицы = СтрЗаменить(ЭтаФорма.ТекущийЭлемент.Имя, "ВыделитьВсе", "");
	Для Каждого Строка Из ЭтаФорма[ИмяТаблицы] Цикл
		Строка.Выбран = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	ИмяТаблицы = СтрЗаменить(ЭтаФорма.ТекущийЭлемент.Имя, "СнятьВсе", "");
	Для Каждого Строка Из ЭтаФорма[ИмяТаблицы] Цикл
		Строка.Выбран = Ложь;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИзмененияФормы

&НаСервере
Процедура НастройкиФормы()
	
	ЭтотОбъект["СтрокаПодключения"] = Константы.БИТС_СтрокаПодключения.Получить();
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект["СтрокаПодключения"]) Тогда
		Возврат;
	КонецЕсли;
	
	БИТС_СпринтыСервер.Обновить(СтрокаПодключения);
	Для Каждого АктивныйСпринт Из БИТС_СпринтыСервер.Прочитать() Цикл
		
		НоваяЗапись = ЭтотОбъект.Спринты.Добавить();
		НоваяЗапись["id"]			= АктивныйСпринт.Ключ;
		НоваяЗапись["groupId"]		= АктивныйСпринт.Значение["groupId"];
		НоваяЗапись["status"]		= АктивныйСпринт.Значение["status"];
		НоваяЗапись["name"]			= АктивныйСпринт.Значение["name"];
		НоваяЗапись["dateStart"]	= АктивныйСпринт.Значение["dateStart"];
		НоваяЗапись["dateEnd"]		= АктивныйСпринт.Значение["dateEnd"];
		НоваяЗапись["goal"]			= АктивныйСпринт.Значение["goal"];
		
		Представление = СтрШаблон(
			"[%1]%2 с %3 по %4 (%5)", 
			АктивныйСпринт.Ключ, 
			АктивныйСпринт.Значение["name"],
			СтрРазделить(АктивныйСпринт.Значение["dateStart"], "T")[0],
			СтрРазделить(АктивныйСпринт.Значение["dateEnd"], "T")[0],
			БИТС_СпринтыСервер.Статусы()[АктивныйСпринт.Значение["status"]]);
			
		ЭтотОбъект.Элементы.Спринт.СписокВыбора.Добавить(АктивныйСпринт.Ключ, Представление, Ложь);
		
	КонецЦикла;
	
	ЭтаФорма.Заголовок = БИТС_СлужебныйСервер.ПредставлениеСпринта(Спринт);
	
КонецПроцедуры

&НаСервере
Процедура СозданиеЭлементовФормы(Знач СтадииСпринта)
	
	БИТС_ФормаСервер.НоваяОбычнаяГруппа(ЭтотОбъект, Элементы["ОсновнаяГруппа"], "ВыборСтадии");
	ГруппаКнопок = Элементы["ВыборСтадии"];
	// TODO: убрать когда таблицы будут генерироваться
	Элементы.Переместить(ГруппаКнопок, Элементы["ОсновнаяГруппа"], Элементы["ГруппаСтадии"]);
	//
	БИТС_ФормаСервер.НоваяКоманда(ЭтотОбъект, "ВидимостьСтадии", "ВидимостьСтадии", "Видимость стадии");
	
	Для Каждого Ключ Из БИТС_СлужебныйСервер.ОтсортированныеКлючи(СтадииСпринта) Цикл
		НаименованиеСтадии = СтадииСпринта[Ключ]["Наименование"];
		ИмяКнопки = "ВидимостьСтадии" + НаименованиеСтадии; 
		БИТС_ФормаСервер.НоваяКнопкаФормы(ЭтотОбъект, ИмяКнопки, ГруппаКнопок, "ВидимостьСтадии");
		Кнопка = Элементы[ИмяКнопки];
		Кнопка.Заголовок = СтадииСпринта[Ключ]["Заголовок"];
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьСостояниеКнопки(Знач Кнопка)

	ОсновныеЦвета = БИТС_ФормаСервер.ОсновныеЦвета();
	Если ЭтаФорма.ТекущийЭлемент.ЦветФона = ОсновныеЦвета["Оранжевый"] Тогда
		ЭтаФорма.ТекущийЭлемент.ЦветФона = ОсновныеЦвета["Зеленый"];
	Иначе
		ЭтаФорма.ТекущийЭлемент.ЦветФона = ОсновныеЦвета["Оранжевый"];
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСТаблицами

&НаСервере
Процедура ОбновитьНаСервере()
	
	НастройкиФормы();
	
	Если НЕ ЗначениеЗаполнено(Спринт) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийСпринт = Спринты.НайтиСтроки(Новый Структура("id", Спринт))[0];
	
	СтадииСпринта = БИТС_СкрамСервер.Стадии(СтрокаПодключения, Спринт, Истина);
	ЗадачиСпринта = БИТС_ЗадачиСервер.Получить(СтрокаПодключения, ТекущийСпринт["groupId"], Спринт, Истина);
	СозданиеЭлементовФормы(СтадииСпринта);
	ЗаполнитьТаблицы(СтадииСпринта, ЗадачиСпринта);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицы(СтадииСпринта, ЗадачиСпринта)
	
	ОчиститьТаблицы();
	
	Для Каждого Задача Из ЗадачиСпринта Цикл
		ИмяЭлемента = "Задачи" + СтадииСпринта[Задача["stageId"]]["Наименование"];
		СтрокаСтадии = ЭтаФорма[ИмяЭлемента].Добавить();
		Для Каждого Поле Из Задача Цикл
			
			СтрокаСтадии[Поле.Ключ] = Расшифровка(Поле);
			СтрокаСтадии["НадписьТаблицыВремя"] = "Время в часах";
			СтрокаСтадии["НадписьТаблицыВсего"] = "Всего:";
			СтрокаСтадии["НадписьТаблицыЗаСпринт"] = "Спринт:";
			СтрокаСтадии["НадписьТаблицыОценка"] = "Оценка:";
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицы()
	
	СтадииСпринта = БИТС_СкрамСервер.Стадии(СтрокаПодключения, Спринт);
	Для Каждого Стадия Из СтадииСпринта Цикл
		ИмяЭлемента = "Задачи" + Стадия.Значение["Наименование"]; 
		ЭтаФорма[ИмяЭлемента].Очистить();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСЗадачами

&НаСервере
Функция ДайджестНаСервере()
	
	Результат = "";
	
	ВыбранныеЗадачи = ВыбранныеЗадачи(); 
	Если ВыбранныеЗадачи.Количество() = 0 Тогда
		Сообщить("Задачи не выбраны");
		Возврат Результат;
	КонецЕсли;
	
	// РезультатыЗадач = ЧетоТам(ВыбранныеЗадачи);
	// СоответствияРезультатов = БИТС_НовостнойДайджест.СоответствияРезультатов(РезультатыЗадач);
	СоответствияРезультатов = Новый Соответствие;
	Результат = БИТС_ДайджестСервер.СформироватьДокумент(ТекущаяДатаСеанса(), СоответствияРезультатов);
	// TODO: Сформировать MD дайджест
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьРезультатыНаСервере()
	
	Результат = Новый Соответствие;
	
	ВыбранныеЗадачи = ВыбранныеЗадачи(); 
	Если ВыбранныеЗадачи.Количество() = 0 Тогда
		Сообщить("Задачи не выбраны");
		Возврат Результат;
	КонецЕсли; 
	
	Результат = БИТС_РезультатыСервер.ПолучитьДляЗадач(СтрокаПодключения, ВыбранныеЗадачи);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ВремяЗаСпринтНаСервере()
	
	Результат = Новый Соответствие;
	
	ВыбранныеЗадачи = ВыбранныеЗадачи(); 
	Если ВыбранныеЗадачи.Количество() = 0 Тогда
		Сообщить("Задачи не выбраны");
		Возврат Результат;
	КонецЕсли;
	
	ТекущийСпринт	= Спринты.НайтиСтроки(Новый Структура("id", Спринт))[0];
	ДатаНачала		= БИТС_СлужебныйСервер.ДатаИзСтроки(ТекущийСпринт["dateStart"]); 
	ДатаОкончания	= БИТС_СлужебныйСервер.ДатаИзСтроки(ТекущийСпринт["dateEnd"]);
	Результат		= БИТС_ЗадачиСервер.ВремяЗаСпринт(СтрокаПодключения, ВыбранныеЗадачи, ДатаНачала, ДатаОкончания);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ВыбранныеЗадачи()
	
	Результат = Новый Массив;
	
	СтадииСпринта = БИТС_СкрамСервер.Стадии(СтрокаПодключения, Спринт);
	Для Каждого Стадия Из СтадииСпринта Цикл
		ИмяЭлемента = "Задачи" + Стадия.Значение["Наименование"];
		Для Каждого Задача Из ЭтаФорма[ИмяЭлемента] Цикл
			Если Задача.Выбран Тогда
				Результат.Добавить(Задача.id);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция Расшифровка(Поле)
	
	Результат = "";
	
	Если Поле.Ключ = "timeSpentInLogs" ИЛИ Поле.Ключ = "timeEstimate" Тогда
		Если ЗначениеЗаполнено(Поле.Значение) Тогда
			Результат = Строка(БИТС_СлужебныйСервер.СекундыВЧасы(Поле.Значение));
		Иначе
			Результат = "0";
		КонецЕсли;
	ИначеЕсли Поле.Ключ = "description" Тогда
		РегулярноеВыражение = "\[(/?[^\]]+)\]";
		Результат = СтрЗаменитьПоРегулярномуВыражению(Поле.Значение, РегулярноеВыражение, "");
	Иначе
		Результат = Поле.Значение;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура СпринтПриИзменении(Элемент)
	СпринтПриИзмененииДекорация();
КонецПроцедуры

&НаКлиенте
Процедура СпринтПриИзмененииДекорация()
	ЦельСпринта = Спринты.НайтиСтроки(Новый Структура("id", Спринт))[0]["goal"];
	Элементы.ДекорацияЦельСпринта.Заголовок = ЦельСпринта;
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОткрытьФормуНастроек() Экспорт
	Оповещение = Новый ОписаниеОповещения("ЗакрытиеНастроек", ЭтотОбъект);
	РежимОткрытия = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму("ОбщаяФорма.БИТС_Настройки",, ЭтотОбъект,,,, Оповещение, РежимОткрытия);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеКонстанты(Знач ИмяКонстанты)
	Возврат Константы[ИмяКонстанты].Получить();
КонецФункции

#КонецОбласти  
